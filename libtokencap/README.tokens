=========================================
strcmp() / memcmp() token capture library
=========================================

  (See ../docs/README for the general instruction manual.)

This Linux-only companion library allows you to instrument strcmp(), memcmp(),
and related functions to automatically extract tokens that may be passed as a
dictionary to afl-fuzz (the -x option) to improve coverage on subsequent runs.

This may help improving coverage in some targets, and do precisely nothing in
others =)

The library prints tokens, without any deduping, by appending them to a file
specified via AFL_TOKEN_FILE. If the variable is not set, the tool uses stderr.

Similarly to afl-tmin, the library is not "proprietary" and can be used with
other fuzzers or testing tools without the need for any code tweaks. It does not
require AFL-instrumented binaries to work.

To use the library, you *need* to make sure that your fuzzing target is compiled
with -fno-builtin and is linked dynamically. If you wish to automate the first
part without mucking with CFLAGS in Makefiles, you can set AFL_NO_BUILTIN=1
when using afl-gcc, which specifically adds:

  -fno-builtin-strcmp -fno-builtin-strncmp -fno-builtin-strcasecmp
  -fno-builtin-strcasencmp -fno-builtin-memcmp

The best way to leverage this tool is to allow afl-fuzz to fuzz normally for a
while and build up a corpus, and then fire off this library on every file found
by AFL. The final step is deduping the returned strings. Basically:

  export AFL_TOKEN_FILE=$PWD/temp_output.txt

  for i in <out_dir>/queue/id*; do
    LD_PRELOAD=/path/to/libgettokens.so \
      /path/to/target/program [...params, including $i...]
  done

  sort -u temp_output.txt >afl_dictionary.txt

If you don't get any results, the target library is probably not using strcmp()
and memcmp() to parse input, you haven't compiled it with -fno-builtin, or the
whole thing isn't dynamically linked.

PS. The library is Linux-only because there is probably no particularly portable
and non-invasive way to distinguish between read-only and read-write memory
mappings. The load_ro_mappings() function is the only thing that would need to
be changed for other OSes.
