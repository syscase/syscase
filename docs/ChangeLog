--------------
Version 0.54b:
--------------

  - A fix for warning messages (oops).

--------------
Version 0.53b:
--------------

  - Major revision of the crash & hang duplicate detection code to better
    deal with fault conditions that can be reached in a multitude of ways.

    The old approach could be compared to hashing stack traces to de-dupe
    crashes, a method prone to crash count inflation. The alternative I
    wanted to avoid would be equivalent to just looking at crash %eip,
    which can have false negatives in common functions such as memcpy().

    The middle ground currently used in afl-fuzz can be compared to looking
    at every line item in the stack trace and tagging crashes as unique if
    we see any function name that we haven't seen before (or something that
    we have *always* seen now disappears). We do the comparison without paying
    any attention to ordering or hit counts. This can still cause some
    crash inflation early on, but the problem will quickly taper off.
    
  - Bugfix for harmless but absurd trim ratios shown if the first exec in
    the trimmer timed out. Spotted by @EspenGx.

--------------
Version 0.52b:
--------------

  - Added a quick summary of the contents in experimental/.

  - Fix to the process of writing fuzzer_stats.

  - Slight reorganization of the .state/ directory, now recording
    redundant paths, too. Note that this breaks the ability to 
    properly resume older sessions - sorry about that.

    (To fix this, simply move <out_dir>/.state/* from an older run
    to <out_dir>/.state/deterministic_done/*.)

--------------
Version 0.51b:
--------------

  - afl-as search order changed to avoid the problem with older copies;
    this also means that I can remove the Makefile check for that.

  - Slight refactoring to allow instrumentation ratio of 0%, mostly as
    a novelty.

  - Moar typos!

  - test_prev target fix, as reported by Ozzy Johnson.

--------------
Version 0.50b:
--------------

  - Additional improvements to the installation script. Patch by Padraig Brady.

  - Various documentation improvements, especially around perf_tips.txt;
    based on the feedback from Alexander Cherepanov.

  - Added AFL_INST_RATIO to afl-as. The only case where this comes handy is
    ffmpeg, at least as far as I can tell. (Trivia: the current version of 
    ffmpeg ./configure also ignores CC and --cc, probably unintentionally).

  - Added documentation for all environmental variables (env_variables.txt).

  - Visual warning for excessive or insufficient bitmap density.

  - -O3 is now added by default; use AFL_DONT_OPTIMIZE if you don't like that.
    Big speed gain for ffmpeg, so seems like a good idea.

  - Minor fix to afl-as to ignore .LBB labels in gcc mode.

--------------
Version 0.49b:
--------------

  - More typo fixes (thanks to Jakub Wilk).

  - Support for clang!

  - AFL_HARDEN doesn't include ASAN by default anymore. Use AFL_USE_ASAN if
    needed. The reasons for this are in notes_for_asan.txt.

  - Switched from configure auto-detection to isatty() to keep afl-as and
    afl-gcc quiet.

  - Improved installation process to properly create symlinks, rather than
    copies of binaries (grr, /usr/bin/install).

--------------
Version 0.48b:
--------------

  - ASAN_OPTIONS=abort_on_error=1 is now force-set. Reported by Hanno Boeck.

  - Makefile mkdir improvements, as suggested by Hanno Boeck.

  - Properly save r8-r11 registers in the x86 setup code (this could cause rare
    problems running *without* instrumentation when the first function called
    in a particular .o file has 5+ parameters). No impact on code running under
    afl-fuzz or afl-showmap. Reported by Padraig Brady.

--------------
Version 0.47b:
--------------

  - Another minor fix for parallel builds of afl, suggested by
    Richard W. M. Jones.

  - Support for suffixes for -m.

  - Documentation updates, notes_for_asan.txt. Based on feedback from
    Hanno Boeck, Ben Laurie, and others.

  - Move to http://lcamtuf.coredump.cx/afl/.

--------------
Version 0.46b:
--------------

  - Makefile dependencies cleaned up for parallel builds. Requested by 
    Richard W. M. Jones.

  - Support for DESTDIR in Makefile. Suggested by Richard W. M. Jones.

  - Removed all the USE_64BIT stuff; we now just auto-detect compilation mode.
    As requested by many callers to the show.

  - Fix for rare problems with programs that use snippets of assembly and
    switch between .code32 and .code64. Fixes a problem reported by
    Hanno Boeck with compiling ToT gdb.

--------------
Version 0.45b:
--------------

  - Test case trimmer. Results in 20-30% size reduction for many types of work
    loads, with very pronounced improvements in path discovery speeds.

  - Better warning for input directories.

  - Test and warning for older copies, based on counterintuitive behavior
    noticed by Hovik Manucharyan.

  - Added fuzzer_stats file for status monitoring. Suggested by @dronesec.

  - Typo fixes, thanks to Alexander Cherepanov.

  - Better warnings about ASAN memory requirements, based on feedback from
    several users.

  - Saner support for non-tty stdout (less output generated, no ANSI art).

--------------
Version 0.44b:
--------------

  - Support for AFL_CC and AFL_CXX (thanks to Ben Laurie).

  - Option combination -S -D replaced with -M for simplicity.

  - Extra check for .section .text; lack of this prevented main() from
    getting instrumented for some users. Reported by Tom Ritter.

  - Reorganization of the testcases/ directory.

  - An extra check to confirm that the build is operational.

  - Consistent use of color reset codes, as suggested by Oliver Kunz.

--------------
Version 0.43b:
--------------

  - Fix for 64-bit gcc -shared reloc bug.

  - echo -e removed from Makefile for compatibility with dash. Suggested
    by Jakub Wilk.

  - Added status_screen.txt.

  - Added canvas_harness.

  - Minor change to the GCC check. Suggested by Hanno Boeck.

--------------
Version 0.42b:
--------------

  - Red zone fix for 64-bit (oops!). Problem reported by Felix Groebert.

  - Horribly experimental ARM support in experimental/arm_support.

  - Several improvements to error messages.

  - Added AFL_QUIET to silence afl-gcc and afl-as when using wonky build
    systems. Reported by Hanno Boeck.

  - Improved check for 64-bit compilation, plus several sanity checks
    in Makefile.

--------------
Version 0.41b:
--------------

  - Fork server fix for processes that call execve().

  - Minor compatibility fixes to Makefile, afl-gcc; suggested by Jakub
    Wilk.

  - Fixes to triage_crashes.sh. Suggested by Jakub Wilk.

  - Multiple instrumentation performance improvements.

  - Visual indication of the number of imported paths.

  - Fix to afl-showmap to make it work well with new instrumentation.

  - Much better messages for crashes early on.

--------------
Version 0.40b:
--------------

  - Proper support for parallelized fuzzing. Inspired by earlier patch
    from Sebastian Roschke.

  - Added an example in experimental/distributed_fuzzing/

--------------
Version 0.39b:
--------------

  - Redesigned status screen, now 90% more spiffy.

  - More verbose and user-friendly messages for some common problems.

  - Resuming now reconstructs path depth, too.

  - Core dumps are inhibited to improve the ability to detect SEGV.

  - A check for redirection of core dumps to files.

  - Minor improvement to the handling of variable paths.

  - Additional performance improvements and tighter mem limits by default.

  - Performance tips added in docs/.

--------------
Version 0.38b:
--------------

  - Fixed an fd leak and +cov tracking bug resulting from changes in 0.37b.

  - Screen update speed now auto-adjusts.

  - Visual indication of non-instrumented mode.

--------------
Version 0.37b:
--------------

  - Added fuzz state tracking for more seamless resumption of aborted
    fuzzing sessions.

  - Removed the -D option, as it's no longer necessary.

  - Refactored calibration code and improved startup reporting.

  - Dynamically scaled timeouts.

  - Visual notification for slow binaries.

  - Improved instrumentation to explicitly cover the other leg of every
    branch.

--------------
Version 0.36b:
--------------

  - Fork server support to avoid the overhead of execve(). A nearly-verbatim
    design from Jann Horn; still pending part 2 that would also skip initial
    setup steps (thinking about reliable heuristics now).

  - Added a check for shell scripts used as fuzz targets.

  - Added a check for fuzz jobs that don't seem to be finding anything.

  - Fixes to how IGNORE_FINDS works (was a bit broken after adding splicing
    and path skip heuristics).

--------------
Version 0.35b:
--------------

  - 64-bit instrumentation properly integrated into afl-as.

--------------
Version 0.34b:
--------------

  - New exec count classifier (the working theory is that it gets meaningful
    coverage with fewer test cases spewed out).

--------------
Version 0.33b:
--------------

  - New, somewhat experimental instrumentation that tries to target only
    arcs, rather than every line. May be fragile, but is a lot faster (2x+).
    Old version included in experimental/old_as/ for time being.

  - Several cosmetic fixes and typo corrections, thanks to Jakub Wilk.

--------------
Version 0.32b:
--------------

  - Another take at fixing the C++ exception thing. Reported by Jakub Wilk.

--------------
Version 0.31b:
--------------

  - Followup fix to afl-as to address a potential problem with newer versions
    of GCC introduced in 0.28b. Thanks to Jann Horn.

--------------
Version 0.30b:
--------------

  - More detail about the underlying operations captured in file names.

--------------
Version 0.29b:
--------------

  - Improvements to chunk operations.

--------------
Version 0.28b:
--------------

  - C++ exception handling fix for newer versions of GCC (thanks to 
    Eberhard Mattes).

  - Fix to the handling of the overflow flag (thanks to Eberhard Mattes).

--------------
Version 0.27b:
--------------

  - Extra prioritization of new paths versus already-fuzzed ones.

  - Include spliced test case ID in the output file name.

  - Fixed a rare, cosmetic null ptr deref after Ctrl-C.

  - Make copies of test cases in the output directory.

  - Use better output file names, keeping track of stage and splicing sources.

--------------
Version 0.26b:
--------------

  - Revamped storage of testcases, -u option removed,

  - Built-in effort minimizer to get rid of potentially redundant inputs,

  - Standalone testcase count minimization script in experimental/,

  - Miscellaneous improvements to directory and file handling.

  - Bug fix to timeout detection.

--------------
Version 0.25b:
--------------

  - Improved count-based instrumentation.

  - Improvements to hang deduplication.

  - New -cov prefixes for test cases.

  - Switched from readdir() to scandir() + alphasort() to preserve ordering of
    test cases.

  - Splicing strategy.

  - Display improvements and several other bugfixes.

--------------
Version 0.24b:
--------------

  - Program name on the progress screen and the -T parameter to go with it.

--------------
Version 0.23b:
--------------

  - Improved detection of variable behaviors.

  - Path depth tracking and several other display improvements.

  - Simplified (XOR-based) tuple instrumentation.

--------------
Version 0.22b:
--------------

  - More proper handling of long bitflips and some swaps.

  - Fix for the handling of gcc -pipe, thanks to anonymous reporter.

--------------
Version 0.21b:
--------------

  - Initial public release.

